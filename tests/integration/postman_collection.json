{
	"id": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
	"name": "Multicolour Requests",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "ee51e8b7-c616-a6d9-a882-277682191fac",
			"name": "No auth",
			"description": "Tests with no auth plugin installed.",
			"order": [
				"d5b5e7ff-32c3-a015-2da9-05a325203378",
				"610b0ac0-bd42-708a-95ce-64919eb4f59b",
				"9402538c-e929-a0e2-0cc1-34785f44ba26",
				"569822dc-a260-7e86-a7a6-72c93871fcf5",
				"0672eb1f-efa4-1a5c-2469-92b6932e78f9",
				"e24d948b-ab39-f380-5d4d-3b87b7b6ef54",
				"01540605-c575-0a04-c739-9abcec61170e",
				"ad1ac0c5-75dd-e8a7-7146-298e9f09a59c",
				"020ff702-d7c7-e8a1-7f23-0fc6de1f4e47"
			],
			"owner": ""
		}
	],
	"timestamp": 1476909272467,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "01540605-c575-0a04-c739-9abcec61170e",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"person has the expected ID\"] = jsonData[0].id === 4",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487784249534,
			"name": "PUT non-existent person creates it with no parent",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"happy testing\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "020ff702-d7c7-e8a1-7f23-0fc6de1f4e47",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/1337",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"person has the expected ID\"] = jsonData[0].id === 1337",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487784782070,
			"name": "PUT with id parameter creates person at that id",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"happy testing\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "0672eb1f-efa4-1a5c-2469-92b6932e78f9",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/3",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Only one result returned\"] = jsonData.length === 1\ntests[\"Valid POST contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"Valid POST with parent has the right parent\"] = jsonData[0].parent.name === \"Parent name\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487783929812,
			"name": "GET created person with parent",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "569822dc-a260-7e86-a7a6-72c93871fcf5",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"Valid POST with parent has the right parent\"] = jsonData[0].parent.name === \"Parent name\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487783438964,
			"name": "POST with related person",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "610b0ac0-bd42-708a-95ce-64919eb4f59b",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Valid POST contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487782158305,
			"name": "POST valid example",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "9402538c-e929-a0e2-0cc1-34785f44ba26",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Bad POST status is 400\"] = jsonData.statusCode === 400\ntests[\"Bad POST error is bad request\"] = jsonData.error === \"Bad Request\"\ntests[\"Bad POST message is expected\"] = jsonData.message === \"person:\\nundefined\\n\\nname:\\n\\\"firstAndLast\\\" validation rule failed for input: 'bad'\\nSpecifically, it threw an error.  Details:\\n undefined\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487782422676,
			"name": "POST invalid example",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"bad\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "ad1ac0c5-75dd-e8a7-7146-298e9f09a59c",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"person has the expected ID\"] = jsonData[0].id === 4",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487784310022,
			"name": "PUT to existing person doesnt create it but assigns a newly created parent",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"happy testing\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"happy testing parent\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "d5b5e7ff-32c3-a015-2da9-05a325203378",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Empty GET request returns no rows\"] = jsonData.length === 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487782342306,
			"name": "GET with no results",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "d5b5e7ff-32c3-a015-2da9-05a325203378",
			"folder": "ee51e8b7-c616-a6d9-a882-277682191fac",
			"rawModeData": "{\n \"identifier\": \"newexhibit\",\n \"type\" : \"exhibit\"\n}"
		},
		{
			"id": "e24d948b-ab39-f380-5d4d-3b87b7b6ef54",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/3000",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody)\n\ntests[\"Status code is 404\"] = responseCode.code === 404\ntests[\"Message is helpful\"] = jsonData.message === \"Documents not found\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487783959762,
			"name": "GET person by out of range id",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		}
	]
}